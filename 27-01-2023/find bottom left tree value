Given the root of a binary tree, return the leftmost value in the last row of the tree.

Input: root = [2,1,3]
Output: 1

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        int ans=0;
       if(root==null){
           return 0;
       } 
       Queue<TreeNode> q = new LinkedList<>();
       q.offer(root);
       while(! q.isEmpty()){
           int size = q.size();
           for(int i=0; i<size; i++){
               TreeNode n = q.poll();
               if(n.left==null && n.right==null){
                   if(i==0){
                       ans=n.val;
                   }
               }
               if(n.left!=null){
                   q.add(n.left);
               }
               if(n.right!=null){
                   q.add(n.right);
               }
           }
       }
       return ans;

    }
}
