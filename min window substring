class Solution {
    public String minWindow(String s, String t) {
        if(s==null || t==null || s.isEmpty() || t.isEmpty()){
            return "";
        }
        HashMap<Character,Integer> map= new HashMap<>();
        for(int i=0;i<t.length();i++){
            char c=t.charAt(i);
            map.put(c,map.getOrDefault(c,0)+1);
        }
        int i=0,j=0;
        int count=getUniqueChar(t);
        int l=0,r=s.length()-1;
        int minLen=s.length();
        boolean found=false;
        while(j<s.length()){
            char endChar=s.charAt(j++);
            if(map.containsKey(endChar)){
                   map.put(endChar,map.get(endChar)-1);
                   if(map.get(endChar)==0){
                          count-=1;
                   }
            }
            if(count>0) continue;
            while(count==0){
                char startChar=s.charAt(i++);
                if(map.containsKey(startChar)){
                   map.put(startChar,map.get(startChar)+1);
                   if(map.get(startChar)>0){
                          count+=1;
                   }
                }
            }
            if(j-i<minLen){
                l=i;
                r=j;
                minLen=j-i;
                found= true;
            }
        }
        return !found ?"":s.substring(l-1,r);
    }
    int getUniqueChar(String t){
        HashSet<Character> s = new HashSet<Character>();
        for(int i = 0; i < t.length(); i++){
            s.add(t.charAt(i));
        }
        return s.size();
    }
    
}
