/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
        PriorityQueue<Integer> q=new PriorityQueue<>();
        List<Integer> l=new ArrayList<>();
        inorder(root1,q);
        inorder(root2,q);
        while(!q.isEmpty()){
            l.add(q.poll());
        }
        return l;
    }
    public void inorder(TreeNode root,PriorityQueue<Integer> q){
        if(root==null) return;
        inorder(root.left,q);
        q.offer(root.val);
        inorder(root.right,q);
     }
   
}
